{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Andersen\\\\Test\\\\frontend_test_ik-master\\\\src\\\\components\\\\Library\\\\ExportDataDialog.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Switch, FormControlLabel, Button } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { CSVLink } from 'react-csv';\nimport { BOOKS, MAGAZINES } from \"./config\";\n\nconst ExportDataDialog = ({\n  openState = false,\n  onCloseCallback\n}) => {\n  const ADDED_DATA_ONLY = 'ADDED DATA ONLY';\n  const FULL_DATA = 'FULL DATA';\n  const libraryData = useSelector(state => state.library);\n  console.log('libraryFullData', libraryData);\n  const {\n    0: exportDataType,\n    1: setExportDataType\n  } = useState(BOOKS);\n  const {\n    0: isFullDataExport,\n    1: setIsFullDataExport\n  } = useState(false);\n\n  const getDataForExport = () => {\n    if (isFullDataExport) {\n      return exportDataType === BOOKS ? libraryData.books : libraryData.magazines;\n    } else {}\n  };\n\n  return __jsx(Dialog, {\n    open: openState,\n    onClose: onCloseCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Export\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      onChange: () => {\n        const type = exportDataType === BOOKS ? MAGAZINES : BOOKS;\n        setExportDataType(type);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }),\n    label: exportDataType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), \"EXPORT\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      onChange: () => {\n        setIsFullDataExport(!isFullDataExport);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }),\n    label: isFullDataExport ? FULL_DATA : ADDED_DATA_ONLY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: onCloseCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(CSVLink, {\n    data: getDataForExport() || [],\n    filename: `new${exportDataType}.csv`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => {},\n    color: 'primary',\n    variant: 'contained',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"DOWNLOAD\"))));\n};\n\nexport default ExportDataDialog;","map":{"version":3,"sources":["D:/Work/Andersen/Test/frontend_test_ik-master/src/components/Library/ExportDataDialog.js"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Switch","FormControlLabel","Button","useSelector","CSVLink","BOOKS","MAGAZINES","ExportDataDialog","openState","onCloseCallback","ADDED_DATA_ONLY","FULL_DATA","libraryData","state","library","console","log","exportDataType","setExportDataType","isFullDataExport","setIsFullDataExport","getDataForExport","books","magazines","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Switch, FormControlLabel, Button } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { CSVLink } from 'react-csv'\r\nimport { BOOKS, MAGAZINES } from './config'\r\n\r\nconst ExportDataDialog = ({ openState = false, onCloseCallback }) => {\r\n\r\n  const ADDED_DATA_ONLY = 'ADDED DATA ONLY'\r\n  const FULL_DATA = 'FULL DATA'\r\n\r\n  const libraryData = useSelector(state => (state.library))\r\n  console.log('libraryFullData', libraryData)\r\n  const [exportDataType, setExportDataType] = useState(BOOKS)\r\n  const [isFullDataExport, setIsFullDataExport] = useState(false)\r\n\r\n  const getDataForExport = () => {\r\n    if (isFullDataExport) {\r\n      return exportDataType === BOOKS ? libraryData.books : libraryData.magazines\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={openState} onClose={onCloseCallback}>\r\n      <DialogTitle>Export</DialogTitle>\r\n      <DialogContent>\r\n        <div>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                onChange={() => {\r\n                  const type = exportDataType === BOOKS ? MAGAZINES : BOOKS\r\n                  setExportDataType(type)\r\n                }}\r\n                color='primary'\r\n              />}\r\n            label={exportDataType}\r\n          />\r\n          <br />\r\n          EXPORT\r\n          <br />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                onChange={() => {\r\n                  setIsFullDataExport(!isFullDataExport)\r\n                }}\r\n                color='primary'\r\n              />}\r\n            label={isFullDataExport ? FULL_DATA : ADDED_DATA_ONLY}\r\n          />\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onCloseCallback}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <CSVLink\r\n          data={getDataForExport() || []}\r\n          filename={`new${exportDataType}.csv`}\r\n        >\r\n          <Button\r\n            onClick={() => {}}\r\n            color={'primary'}\r\n            variant={'contained'}\r\n          >\r\n            DOWNLOAD\r\n          </Button>\r\n        </CSVLink>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default ExportDataDialog\r\n"]},"metadata":{},"sourceType":"module"}