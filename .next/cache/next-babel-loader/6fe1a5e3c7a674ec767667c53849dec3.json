{"ast":null,"code":"var _jsxFileName = \"/Users/ilyakaminsky/Downloads/frontend_test_ikaminskii-master/src/components/Library/LibraryTable.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, TextField } from '@material-ui/core';\nimport { orderBy } from 'lodash';\nimport AddBookMagazineDialog from \"./AddBookMagazineDialog\";\nimport ExportDataDialog from \"./ExportDataDialog\";\nimport TableHeader from \"../Table/TableHeader\";\nimport TableRows from \"../Table/TableRows\";\nimport { FILTER_PLACEHOLDER, FILTER_STYLES, LIBRARY_BUTTON, LIBRARY_STYLES, LIBRARY_WRAPPER_STYLES } from \"../../utils/consts\";\n\nconst LibraryTable = () => {\n  const libraryFullData = useSelector(state => {\n    var _state$library;\n\n    return (_state$library = state.library) === null || _state$library === void 0 ? void 0 : _state$library.fullData;\n  });\n  const {\n    0: libraryData,\n    1: setLibraryData\n  } = useState([]);\n  const {\n    0: sortParameters,\n    1: setSortParameters\n  } = useState({\n    field: 'title',\n    order: 'asc'\n  });\n  const {\n    0: filterValue,\n    1: setFilterValue\n  } = useState('');\n  const {\n    0: openAddBookMagazineDialogState,\n    1: setOpenAddBookMagazineDialogState\n  } = useState(false);\n  const {\n    0: openExportDataDialogState,\n    1: setOpenExportDataDialogState\n  } = useState(false);\n  useEffect(() => {\n    let libraryFilteredData = !filterValue ? libraryFullData : libraryFullData.filter(item => {\n      if (item.isbn.toString().toLowerCase().includes(filterValue.toLowerCase())) {\n        return true;\n      }\n\n      let authorsMails = '';\n      item.authors.forEach(author => {\n        authorsMails += `${author.email} `;\n      });\n      return authorsMails.toLowerCase().includes(filterValue.toLowerCase());\n    });\n    libraryFilteredData && setLibraryData(orderBy(libraryFilteredData, sortParameters.field, sortParameters.order));\n  }, [libraryFullData === null || libraryFullData === void 0 ? void 0 : libraryFullData.length, sortParameters, filterValue]);\n\n  const closeAddBookMagazineDialog = () => {\n    setOpenAddBookMagazineDialogState(false);\n  };\n\n  const openAddBookMagazineDialog = () => {\n    setOpenAddBookMagazineDialogState(true);\n  };\n\n  const closeExportDataDialog = () => {\n    setOpenExportDataDialogState(false);\n  };\n\n  const openExportDataDialog = () => {\n    setOpenExportDataDialogState(true);\n  };\n\n  const makeFilterInput = () => __jsx(TextField, {\n    onChange: e => {\n      setFilterValue(e.target.value);\n    },\n    value: filterValue,\n    placeholder: FILTER_PLACEHOLDER,\n    style: FILTER_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: LIBRARY_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, makeFilterInput(), __jsx(\"div\", {\n    style: LIBRARY_WRAPPER_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: openAddBookMagazineDialog,\n    variant: \"contained\",\n    style: LIBRARY_BUTTON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Add Book / Magazine\"), __jsx(Button, {\n    onClick: openExportDataDialog,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Export\"))), __jsx(TableHeader, {\n    sortParameters: sortParameters,\n    setSortParameters: setSortParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), __jsx(TableRows, {\n    libraryData: libraryData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), __jsx(AddBookMagazineDialog, {\n    openState: openAddBookMagazineDialogState,\n    onCloseCallback: closeAddBookMagazineDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), __jsx(ExportDataDialog, {\n    openState: openExportDataDialogState,\n    onCloseCallback: closeExportDataDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LibraryTable;","map":{"version":3,"sources":["/Users/ilyakaminsky/Downloads/frontend_test_ikaminskii-master/src/components/Library/LibraryTable.js"],"names":["React","useEffect","useState","useSelector","Button","TextField","orderBy","AddBookMagazineDialog","ExportDataDialog","TableHeader","TableRows","FILTER_PLACEHOLDER","FILTER_STYLES","LIBRARY_BUTTON","LIBRARY_STYLES","LIBRARY_WRAPPER_STYLES","LibraryTable","libraryFullData","state","library","fullData","libraryData","setLibraryData","sortParameters","setSortParameters","field","order","filterValue","setFilterValue","openAddBookMagazineDialogState","setOpenAddBookMagazineDialogState","openExportDataDialogState","setOpenExportDataDialogState","libraryFilteredData","filter","item","isbn","toString","toLowerCase","includes","authorsMails","authors","forEach","author","email","length","closeAddBookMagazineDialog","openAddBookMagazineDialog","closeExportDataDialog","openExportDataDialog","makeFilterInput","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport { orderBy } from 'lodash'\r\nimport AddBookMagazineDialog from './AddBookMagazineDialog'\r\nimport ExportDataDialog from './ExportDataDialog'\r\nimport TableHeader from '../Table/TableHeader'\r\nimport TableRows from '../Table/TableRows'\r\nimport {\r\n  FILTER_PLACEHOLDER,\r\n  FILTER_STYLES,\r\n  LIBRARY_BUTTON,\r\n  LIBRARY_STYLES,\r\n  LIBRARY_WRAPPER_STYLES\r\n} from '../../utils/consts'\r\n\r\nconst LibraryTable = () => {\r\n\r\n  const libraryFullData = useSelector(state => (state.library?.fullData));\r\n  const [libraryData, setLibraryData] = useState([]);\r\n  const [sortParameters, setSortParameters] = useState({field: 'title', order: 'asc'});\r\n  const [filterValue, setFilterValue] = useState('');\r\n  const [openAddBookMagazineDialogState, setOpenAddBookMagazineDialogState] = useState(false);\r\n  const [openExportDataDialogState, setOpenExportDataDialogState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let libraryFilteredData = !filterValue ? libraryFullData : libraryFullData.filter((item) => {\r\n      if (item.isbn.toString().toLowerCase().includes(filterValue.toLowerCase())) {\r\n        return true\r\n      }\r\n      let authorsMails = '';\r\n      item.authors.forEach(author => {authorsMails += `${author.email} `});\r\n      return authorsMails.toLowerCase().includes(filterValue.toLowerCase());\r\n    });\r\n\r\n    libraryFilteredData && setLibraryData(orderBy(libraryFilteredData, sortParameters.field, sortParameters.order));\r\n  }, [libraryFullData?.length, sortParameters, filterValue]);\r\n\r\n  const closeAddBookMagazineDialog = () => {\r\n    setOpenAddBookMagazineDialogState(false);\r\n  }\r\n  const openAddBookMagazineDialog = () => {\r\n    setOpenAddBookMagazineDialogState(true);\r\n  }\r\n\r\n  const closeExportDataDialog = () => {\r\n    setOpenExportDataDialogState(false);\r\n  }\r\n  const openExportDataDialog = () => {\r\n    setOpenExportDataDialogState(true);\r\n  }\r\n\r\n  const makeFilterInput = () => (\r\n    <TextField\r\n      onChange={(e) => {\r\n        setFilterValue(e.target.value);\r\n      }}\r\n      value={filterValue}\r\n      placeholder={FILTER_PLACEHOLDER}\r\n      style={FILTER_STYLES}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div style={LIBRARY_STYLES}>\r\n        {makeFilterInput()}\r\n        <div style={LIBRARY_WRAPPER_STYLES}>\r\n          <Button\r\n            onClick={openAddBookMagazineDialog}\r\n            variant=\"contained\"\r\n            style={LIBRARY_BUTTON}\r\n          >\r\n            Add Book / Magazine\r\n          </Button>\r\n          <Button\r\n            onClick={openExportDataDialog}\r\n            variant=\"contained\"\r\n          >\r\n            Export\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <TableHeader\r\n        sortParameters={sortParameters}\r\n        setSortParameters={setSortParameters}\r\n      />\r\n      <TableRows libraryData={libraryData}/>\r\n      <AddBookMagazineDialog\r\n        openState={openAddBookMagazineDialogState}\r\n        onCloseCallback={closeAddBookMagazineDialog}\r\n      />\r\n      <ExportDataDialog\r\n        openState={openExportDataDialogState}\r\n        onCloseCallback={closeExportDataDialog}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LibraryTable;\r\n"]},"metadata":{},"sourceType":"module"}