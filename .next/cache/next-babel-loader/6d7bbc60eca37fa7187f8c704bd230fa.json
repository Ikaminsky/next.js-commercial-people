{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Andersen\\\\Test\\\\frontend_test_ik-master\\\\src\\\\components\\\\Library\\\\AddBookMagazineDialog.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Switch, FormControlLabel, Button, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { BOOK, MAGAZINE, addBookMagazineTextFields } from \"./config\";\n\nconst AddBookMagazineDialog = ({\n  openState = false,\n  onCloseCallback\n}) => {\n  const {\n    0: additionType,\n    1: setAdditionType\n  } = useState(BOOK);\n  const {\n    0: newBookMagazineData,\n    1: setNewBookMagazineData\n  } = useState({\n    title: '',\n    isbn: '',\n    authors: '',\n    publishedAt: '',\n    description: ''\n  });\n  return __jsx(Dialog, {\n    open: openState,\n    onClose: onCloseCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Add new\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      onChange: () => {\n        const type = additionType === BOOK ? MAGAZINE : BOOK;\n        setAdditionType(type);\n        setNewBookMagazineData({\n          title: '',\n          isbn: '',\n          authors: '',\n          publishedAt: '',\n          description: ''\n        });\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }),\n    label: additionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), addBookMagazineTextFields.map((item, index) => __jsx(TextField, {\n    key: `add-book-magazine-text-field-${index}`,\n    onChange: e => {\n      const key = typeof item.key === 'string' ? item.key : item.key[additionType];\n      console.log('key', key);\n      setNewBookMagazineData(_objectSpread(_objectSpread({}, newBookMagazineData), {}, {\n        [key]: e.target.value\n      }));\n    },\n    value: newBookMagazineData[item.key],\n    placeholder: typeof item.placeholder === 'string' ? item.placeholder : item.placeholder[additionType],\n    style: {\n      width: '500px',\n      marginBottom: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: onCloseCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: () => {\n      console.log('newBookMagazineData', newBookMagazineData);\n    },\n    color: 'primary',\n    variant: 'contained',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\n\nexport default AddBookMagazineDialog;","map":{"version":3,"sources":["D:/Work/Andersen/Test/frontend_test_ik-master/src/components/Library/AddBookMagazineDialog.js"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Switch","FormControlLabel","Button","TextField","useDispatch","BOOK","MAGAZINE","addBookMagazineTextFields","AddBookMagazineDialog","openState","onCloseCallback","additionType","setAdditionType","newBookMagazineData","setNewBookMagazineData","title","isbn","authors","publishedAt","description","type","map","item","index","e","key","console","log","target","value","placeholder","width","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Switch,\r\n  FormControlLabel,\r\n  Button, TextField\r\n} from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { BOOK, MAGAZINE, addBookMagazineTextFields } from './config'\r\n\r\nconst AddBookMagazineDialog = ({ openState = false, onCloseCallback }) => {\r\n\r\n  const [additionType, setAdditionType] = useState(BOOK)\r\n  const [newBookMagazineData, setNewBookMagazineData] = useState({\r\n    title: '',\r\n    isbn: '',\r\n    authors: '',\r\n    publishedAt: '',\r\n    description: ''\r\n  })\r\n\r\n  return (\r\n    <Dialog open={openState} onClose={onCloseCallback}>\r\n      <DialogTitle>Add new</DialogTitle>\r\n      <DialogContent>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              onChange={() => {\r\n                const type = additionType === BOOK ? MAGAZINE : BOOK\r\n                setAdditionType(type)\r\n                setNewBookMagazineData({\r\n                  title: '',\r\n                  isbn: '',\r\n                  authors: '',\r\n                  publishedAt: '',\r\n                  description: ''\r\n                })\r\n              }}\r\n              color='primary'\r\n            />}\r\n          label={additionType}\r\n        />\r\n        <br />\r\n        {addBookMagazineTextFields.map((item, index) => (\r\n          <TextField\r\n            key={`add-book-magazine-text-field-${index}`}\r\n            onChange={(e) => {\r\n              const key = typeof item.key === 'string' ? item.key : item.key[additionType]\r\n              console.log('key', key);\r\n              setNewBookMagazineData({ ...newBookMagazineData, [key]: e.target.value })\r\n            }}\r\n            value={newBookMagazineData[item.key]}\r\n            placeholder={\r\n              typeof item.placeholder === 'string' ? item.placeholder : item.placeholder[additionType]\r\n            }\r\n            style={{ width: '500px', marginBottom: '16px' }}\r\n          />\r\n        ))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onCloseCallback}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => { console.log('newBookMagazineData', newBookMagazineData) }}\r\n          color={'primary'}\r\n          variant={'contained'}\r\n        >\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddBookMagazineDialog\r\n"]},"metadata":{},"sourceType":"module"}