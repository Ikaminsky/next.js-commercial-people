{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Andersen\\\\Test\\\\frontend_test_ik-master\\\\src\\\\components\\\\LibraryTable.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport * as authors from \"../../data/authors.json\";\nimport * as books from \"../../data/books.json\";\nimport * as magazines from \"../../data/magazines.json\";\nimport { useStore } from 'react-redux';\n\nconst LibraryTable = () => {\n  var _store$getState$libra2;\n\n  const store = useStore();\n  const {\n    0: libraryData,\n    1: setLibraryData\n  } = useState([]);\n  useEffect(() => {\n    var _store$getState$libra;\n\n    console.log('store', store.getState().library);\n    setLibraryData((_store$getState$libra = store.getState().library) === null || _store$getState$libra === void 0 ? void 0 : _store$getState$libra.fullData);\n  }, [(_store$getState$libra2 = store.getState().library) === null || _store$getState$libra2 === void 0 ? void 0 : _store$getState$libra2.fullData]);\n\n  const makeAuthorsCell = authorsMails => {\n    return __jsx(\"div\", {\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, authorsMails.split(',').map(item => {\n      let author = {};\n\n      for (let i = 0; i < authors.default.length; i++) {\n        if (authors.default[i].email === item) {\n          author = authors.default[i];\n          break;\n        }\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, author.firstname, \" \", author.lastname));\n    }));\n  };\n\n  const makeTableRows = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, libraryData === null || libraryData === void 0 ? void 0 : libraryData.map((item, index) => {\n      return __jsx(\"div\", {\n        key: `library-table-row-${index}`,\n        style: {\n          width: '100%',\n          borderBottom: '1px solid',\n          display: 'flex',\n          alignItems: 'center',\n          padding: '8px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: '10%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, item.isbn), __jsx(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: '15%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, item.title), __jsx(\"div\", {\n        style: {\n          display: 'inline-block',\n          width: '45%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, item.additionalData.value));\n    }));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Library\", makeTableRows());\n};\n\nexport default LibraryTable;","map":{"version":3,"sources":["D:/Work/Andersen/Test/frontend_test_ik-master/src/components/LibraryTable.js"],"names":["React","useEffect","useState","authors","books","magazines","useStore","LibraryTable","store","libraryData","setLibraryData","console","log","getState","library","fullData","makeAuthorsCell","authorsMails","display","split","map","item","author","i","default","length","email","firstname","lastname","makeTableRows","index","width","borderBottom","alignItems","padding","isbn","title","additionalData","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport * as authors from '../../data/authors.json'\r\nimport * as books from '../../data/books.json'\r\nimport * as magazines from '../../data/magazines.json'\r\nimport { useStore } from 'react-redux'\r\n\r\nconst LibraryTable = () => {\r\n\r\n  const store = useStore();\r\n  const [libraryData, setLibraryData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log('store', store.getState().library);\r\n    setLibraryData(store.getState().library?.fullData);\r\n  }, [store.getState().library?.fullData]);\r\n\r\n  const makeAuthorsCell = (authorsMails) => {\r\n    return (<div style={{display: 'inline-block'}}>\r\n      {authorsMails.split(',').map((item) => {\r\n        let author = {};\r\n        for (let i = 0; i < authors.default.length; i++) {\r\n          if (authors.default[i].email === item) {\r\n            author = authors.default[i];\r\n            break;\r\n          }\r\n        }\r\n\r\n        return (\r\n          <>\r\n            <div>\r\n              {author.firstname} {author.lastname}\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </div>);\r\n  }\r\n\r\n  const makeTableRows = () => {\r\n    return (\r\n      <div>\r\n        {libraryData?.map((item, index) => {\r\n          return (\r\n            <div key={`library-table-row-${index}`} style={{width: '100%', borderBottom: '1px solid', display: 'flex', alignItems: 'center', padding: '8px 0'}}>\r\n              <div style={{display: 'inline-block', width: '10%'}}>\r\n                {item.isbn}\r\n              </div>\r\n              <div style={{display: 'inline-block', width: '15%'}}>\r\n                {item.title}\r\n              </div>\r\n              <div style={{display: 'inline-block', width: '45%'}}>\r\n                {item.additionalData.value}\r\n              </div>\r\n              {/*{makeAuthorsCell(item.authors)}*/}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Library\r\n      {makeTableRows()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LibraryTable;"]},"metadata":{},"sourceType":"module"}