{"ast":null,"code":"var _jsxFileName = \"/Users/ilyakaminsky/Downloads/frontend_test_ikaminskii-master/src/components/Library/LibraryTable.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { tableCells } from \"./config\";\nimport { Tooltip, TextField, Button } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { orderBy } from 'lodash';\nimport AddBookMagazineDialog from \"./AddBookMagazineDialog\";\nimport ExportDataDialog from \"./ExportDataDialog\";\nimport { SORTING_TYPES, FILTER_PLACEHOLDER, FILTER_STYLES, TABLE_HEADER_STYLES, CURSORS, TABLE_HEADER_SPAN_STYLES, LIBRARY_ITEM_STYLES, LIBRARY_STYLES, LIBRARY_WRAPPER_STYLES, LIBRARY_BUTTON } from \"../../utils/consts\";\n\nconst LibraryTable = () => {\n  const libraryFullData = useSelector(state => {\n    var _state$library;\n\n    return (_state$library = state.library) === null || _state$library === void 0 ? void 0 : _state$library.fullData;\n  });\n  const {\n    0: libraryData,\n    1: setLibraryData\n  } = useState([]);\n  const {\n    0: sortParameters,\n    1: setSortParameters\n  } = useState({\n    field: SORTING_TYPES.field,\n    order: SORTING_TYPES.order\n  });\n  const {\n    0: filterValue,\n    1: setFilterValue\n  } = useState('');\n  const {\n    0: openAddBookMagazineDialogState,\n    1: setOpenAddBookMagazineDialogState\n  } = useState(false);\n  const {\n    0: openExportDataDialogState,\n    1: setOpenExportDataDialogState\n  } = useState(false);\n  useEffect(() => {\n    let libraryFilteredData = !filterValue ? libraryFullData : libraryFullData.filter(item => {\n      if (item.isbn.toString().toLowerCase().includes(filterValue.toLowerCase())) {\n        return true;\n      }\n\n      let authorsMails = '';\n      item.authors.forEach(author => {\n        authorsMails += `${author.email} `;\n      });\n      return authorsMails.toLowerCase().includes(filterValue.toLowerCase());\n    });\n    libraryFilteredData && setLibraryData(orderBy(libraryFilteredData, sortParameters.field, sortParameters.asc));\n  }, [libraryFullData === null || libraryFullData === void 0 ? void 0 : libraryFullData.length, sortParameters, filterValue]);\n\n  const closeAddBookMagazineDialog = () => {\n    setOpenAddBookMagazineDialogState(false);\n  };\n\n  const openAddBookMagazineDialog = () => {\n    setOpenAddBookMagazineDialogState(true);\n  };\n\n  const closeExportDataDialog = () => {\n    setOpenExportDataDialogState(false);\n  };\n\n  const openExportDataDialog = () => {\n    setOpenExportDataDialogState(true);\n  };\n\n  const makeFilterInput = () => __jsx(TextField, {\n    onChange: e => {\n      setFilterValue(e.target.value);\n    },\n    value: filterValue,\n    placeholder: FILTER_PLACEHOLDER,\n    style: FILTER_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  });\n\n  const makeTableHeader = () => __jsx(\"div\", {\n    style: TABLE_HEADER_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, tableCells.map((item, headerCellIndex) => __jsx(\"div\", {\n    style: _objectSpread(_objectSpread({}, item.cellStyle), {}, {\n      cursor: item.isSortable ? CURSORS.pointer : CURSORS.auto\n    }),\n    key: `library-table-header-${headerCellIndex}`,\n    onClick: e => {\n      e.stopPropagation();\n      item.isSortable && setSortParameters({\n        field: item.title,\n        order: sortParameters.asc === SORTING_TYPES.asc ? SORTING_TYPES.desc : SORTING_TYPES.asc\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, item.headerTitle, __jsx(\"span\", {\n    style: TABLE_HEADER_SPAN_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, sortParameters.field === item.title ? sortParameters.order === SORTING_TYPES.asc ? __jsx(ArrowUpwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 60\n    }\n  }) : __jsx(ArrowDownwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 82\n    }\n  }) : ''))));\n\n  const makeRowCellForObjectValue = (objectItem, rowIndex) => {\n    return objectItem.value ? objectItem.value : __jsx(React.Fragment, null, objectItem.map((item, index) => __jsx(\"div\", {\n      key: `library-table-row-tooltip-cell-${rowIndex}-4-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, __jsx(Tooltip, {\n      title: item.email,\n      interactive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, item.firstname, \" \", item.lastname)))));\n  };\n\n  const makeTableRows = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, libraryData === null || libraryData === void 0 ? void 0 : libraryData.map((item, rowIndex) => {\n      return __jsx(\"div\", {\n        key: `library-table-row-${rowIndex}`,\n        style: LIBRARY_ITEM_STYLES,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, tableCells.map((cell, cellIndex) => __jsx(\"div\", {\n        key: `library-table-row-cell-${rowIndex}-${cellIndex}`,\n        style: cell.cellStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, typeof item[cell.title] !== 'object' ? item[cell.title] : makeRowCellForObjectValue(item[cell.title], rowIndex))));\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: LIBRARY_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, makeFilterInput(), __jsx(\"div\", {\n    style: LIBRARY_WRAPPER_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: openAddBookMagazineDialog,\n    variant: \"contained\",\n    style: LIBRARY_BUTTON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Add Book / Magazine\"), __jsx(Button, {\n    onClick: openExportDataDialog,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Export\"))), makeTableHeader(), makeTableRows(), __jsx(AddBookMagazineDialog, {\n    openState: openAddBookMagazineDialogState,\n    onCloseCallback: closeAddBookMagazineDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), __jsx(ExportDataDialog, {\n    openState: openExportDataDialogState,\n    onCloseCallback: closeExportDataDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LibraryTable;","map":{"version":3,"sources":["/Users/ilyakaminsky/Downloads/frontend_test_ikaminskii-master/src/components/Library/LibraryTable.js"],"names":["React","useEffect","useState","useSelector","tableCells","Tooltip","TextField","Button","ArrowUpwardIcon","ArrowDownwardIcon","orderBy","AddBookMagazineDialog","ExportDataDialog","SORTING_TYPES","FILTER_PLACEHOLDER","FILTER_STYLES","TABLE_HEADER_STYLES","CURSORS","TABLE_HEADER_SPAN_STYLES","LIBRARY_ITEM_STYLES","LIBRARY_STYLES","LIBRARY_WRAPPER_STYLES","LIBRARY_BUTTON","LibraryTable","libraryFullData","state","library","fullData","libraryData","setLibraryData","sortParameters","setSortParameters","field","order","filterValue","setFilterValue","openAddBookMagazineDialogState","setOpenAddBookMagazineDialogState","openExportDataDialogState","setOpenExportDataDialogState","libraryFilteredData","filter","item","isbn","toString","toLowerCase","includes","authorsMails","authors","forEach","author","email","asc","length","closeAddBookMagazineDialog","openAddBookMagazineDialog","closeExportDataDialog","openExportDataDialog","makeFilterInput","e","target","value","makeTableHeader","map","headerCellIndex","cellStyle","cursor","isSortable","pointer","auto","stopPropagation","title","desc","headerTitle","makeRowCellForObjectValue","objectItem","rowIndex","index","firstname","lastname","makeTableRows","cell","cellIndex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { tableCells } from './config';\r\nimport { Tooltip, TextField, Button } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { orderBy } from 'lodash';\r\nimport AddBookMagazineDialog from './AddBookMagazineDialog'\r\nimport ExportDataDialog from './ExportDataDialog'\r\nimport {\r\n  SORTING_TYPES,\r\n  FILTER_PLACEHOLDER,\r\n  FILTER_STYLES,\r\n  TABLE_HEADER_STYLES,\r\n  CURSORS,\r\n  TABLE_HEADER_SPAN_STYLES,\r\n  LIBRARY_ITEM_STYLES,\r\n  LIBRARY_STYLES,\r\n  LIBRARY_WRAPPER_STYLES,\r\n  LIBRARY_BUTTON\r\n} from '../../utils/consts'\r\n\r\n\r\nconst LibraryTable = () => {\r\n\r\n  const libraryFullData = useSelector(state => (state.library?.fullData));\r\n  const [libraryData, setLibraryData] = useState([]);\r\n  const [sortParameters, setSortParameters] = useState({field: SORTING_TYPES.field, order: SORTING_TYPES.order});\r\n  const [filterValue, setFilterValue] = useState('');\r\n  const [openAddBookMagazineDialogState, setOpenAddBookMagazineDialogState] = useState(false);\r\n  const [openExportDataDialogState, setOpenExportDataDialogState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let libraryFilteredData = !filterValue ? libraryFullData : libraryFullData.filter((item) => {\r\n      if (item.isbn.toString().toLowerCase().includes(filterValue.toLowerCase())) {\r\n        return true\r\n      }\r\n      let authorsMails = '';\r\n      item.authors.forEach(author => {authorsMails += `${author.email} `});\r\n      return authorsMails.toLowerCase().includes(filterValue.toLowerCase());\r\n    });\r\n\r\n    libraryFilteredData && setLibraryData(orderBy(libraryFilteredData, sortParameters.field, sortParameters.asc));\r\n  }, [libraryFullData?.length, sortParameters, filterValue]);\r\n\r\n  const closeAddBookMagazineDialog = () => {\r\n    setOpenAddBookMagazineDialogState(false);\r\n  }\r\n  const openAddBookMagazineDialog = () => {\r\n    setOpenAddBookMagazineDialogState(true);\r\n  }\r\n\r\n  const closeExportDataDialog = () => {\r\n    setOpenExportDataDialogState(false);\r\n  }\r\n  const openExportDataDialog = () => {\r\n    setOpenExportDataDialogState(true);\r\n  }\r\n\r\n  const makeFilterInput = () => (\r\n    <TextField\r\n      onChange={(e) => {\r\n        setFilterValue(e.target.value);\r\n      }}\r\n      value={filterValue}\r\n      placeholder={FILTER_PLACEHOLDER}\r\n      style={FILTER_STYLES}\r\n    />\r\n  );\r\n\r\n  const makeTableHeader = () => (\r\n    <div style={TABLE_HEADER_STYLES}>\r\n      {tableCells.map((item, headerCellIndex) => (\r\n        <div\r\n          style={{...item.cellStyle, cursor: item.isSortable? CURSORS.pointer : CURSORS.auto}}\r\n          key={`library-table-header-${headerCellIndex}`}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            item.isSortable && setSortParameters({\r\n              field: item.title, order: sortParameters.asc === SORTING_TYPES.asc ? SORTING_TYPES.desc : SORTING_TYPES.asc\r\n            });\r\n          }}\r\n        >\r\n          {item.headerTitle}\r\n          <span style={TABLE_HEADER_SPAN_STYLES}>\r\n            {sortParameters.field === item.title ? (\r\n              sortParameters.order === SORTING_TYPES.asc ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />\r\n            ) : ''}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>);\r\n\r\n  const makeRowCellForObjectValue = (objectItem, rowIndex) => {\r\n    return (\r\n    objectItem.value ? objectItem.value:\r\n      (<>{objectItem.map((item, index) => (\r\n      <div key={`library-table-row-tooltip-cell-${rowIndex}-4-${index}`}>\r\n        <Tooltip title={item.email} interactive={true}>\r\n          <span>{item.firstname} {item.lastname}</span>\r\n        </Tooltip>\r\n      </div>\r\n    ))}</>)\r\n  )}\r\n\r\n  const makeTableRows = () => {\r\n    return (\r\n      <div>\r\n        {libraryData?.map((item, rowIndex) => {\r\n          return (\r\n            <div\r\n              key={`library-table-row-${rowIndex}`}\r\n              style={LIBRARY_ITEM_STYLES}\r\n            >\r\n              {tableCells.map((cell, cellIndex) => (\r\n                <div\r\n                  key={`library-table-row-cell-${rowIndex}-${cellIndex}`}\r\n                  style={cell.cellStyle}\r\n                >\r\n                  {typeof item[cell.title] !== 'object' ? item[cell.title] : makeRowCellForObjectValue(item[cell.title], rowIndex)}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={LIBRARY_STYLES}>\r\n        {makeFilterInput()}\r\n        <div style={LIBRARY_WRAPPER_STYLES}>\r\n          <Button\r\n            onClick={openAddBookMagazineDialog}\r\n            variant=\"contained\"\r\n            style={LIBRARY_BUTTON}\r\n          >\r\n            Add Book / Magazine\r\n          </Button>\r\n          <Button\r\n            onClick={openExportDataDialog}\r\n            variant=\"contained\"\r\n          >\r\n            Export\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {makeTableHeader()}\r\n      {makeTableRows()}\r\n      <AddBookMagazineDialog\r\n        openState={openAddBookMagazineDialogState}\r\n        onCloseCallback={closeAddBookMagazineDialog}\r\n      />\r\n      <ExportDataDialog\r\n        openState={openExportDataDialogState}\r\n        onCloseCallback={closeExportDataDialog}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LibraryTable;\r\n"]},"metadata":{},"sourceType":"module"}