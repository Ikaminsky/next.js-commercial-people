{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Work\\\\Andersen\\\\Test\\\\frontend_test_ik-master\\\\src\\\\components\\\\Library\\\\AddBookMagazineDialog.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Switch, FormControlLabel, Button, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { BOOK, MAGAZINE, addBookMagazineTextFields } from \"./config\";\nimport { addNewData } from \"../../actions/library\";\n\nvar AddBookMagazineDialog = function AddBookMagazineDialog(_ref) {\n  _s();\n\n  var _ref$openState = _ref.openState,\n      openState = _ref$openState === void 0 ? false : _ref$openState,\n      onCloseCallback = _ref.onCloseCallback;\n\n  var _useState = useState(BOOK),\n      additionType = _useState[0],\n      setAdditionType = _useState[1];\n\n  var _useState2 = useState({\n    title: '',\n    isbn: '',\n    authors: '',\n    publishedAt: '',\n    description: ''\n  }),\n      newBookMagazineData = _useState2[0],\n      setNewBookMagazineData = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var validationSuccess = function validationSuccess() {\n    return newBookMagazineData.title && newBookMagazineData.isbn && newBookMagazineData.authors;\n  };\n\n  return __jsx(Dialog, {\n    open: openState,\n    onClose: onCloseCallback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Add new\"), __jsx(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      onChange: function onChange() {\n        var type = additionType === BOOK ? MAGAZINE : BOOK;\n        setAdditionType(type);\n        setNewBookMagazineData(_objectSpread(_objectSpread({}, newBookMagazineData), {}, {\n          publishedAt: '',\n          description: ''\n        }));\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }),\n    label: additionType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), addBookMagazineTextFields.map(function (item, index) {\n    return !item.switchable || item.switchable && additionType === item.conditionalKey ? __jsx(TextField, {\n      key: \"add-book-magazine-text-field-\".concat(index),\n      onChange: function onChange(e) {\n        setNewBookMagazineData(_objectSpread(_objectSpread({}, newBookMagazineData), {}, _defineProperty({}, item.key, e.target.value)));\n      },\n      value: newBookMagazineData[item.key],\n      placeholder: item.placeholder,\n      style: {\n        width: '500px',\n        marginBottom: '16px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 91\n      }\n    }) : '';\n  })), __jsx(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: onCloseCallback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: function onClick() {\n      validationSuccess() && dispatch(addNewData(newBookMagazineData, additionType));\n    },\n    color: 'primary',\n    variant: 'contained',\n    disabled: !validationSuccess(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\n\n_s(AddBookMagazineDialog, \"avXIaCKxDHTpWk0KORpT53KCcVU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddBookMagazineDialog;\nexport default AddBookMagazineDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBookMagazineDialog\");","map":{"version":3,"sources":["D:/Work/Andersen/Test/frontend_test_ik-master/src/components/Library/AddBookMagazineDialog.js"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Switch","FormControlLabel","Button","TextField","useDispatch","BOOK","MAGAZINE","addBookMagazineTextFields","addNewData","AddBookMagazineDialog","openState","onCloseCallback","additionType","setAdditionType","title","isbn","authors","publishedAt","description","newBookMagazineData","setNewBookMagazineData","dispatch","validationSuccess","type","map","item","index","switchable","conditionalKey","e","key","target","value","placeholder","width","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Switch,\r\n  FormControlLabel,\r\n  Button, TextField\r\n} from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { BOOK, MAGAZINE, addBookMagazineTextFields } from './config'\r\nimport { addNewData } from '../../actions/library'\r\n\r\nconst AddBookMagazineDialog = ({ openState = false, onCloseCallback }) => {\r\n  const [additionType, setAdditionType] = useState(BOOK)\r\n  const [newBookMagazineData, setNewBookMagazineData] = useState({\r\n    title: '',\r\n    isbn: '',\r\n    authors: '',\r\n    publishedAt: '',\r\n    description: ''\r\n  })\r\n  const dispatch = useDispatch()\r\n\r\n  const validationSuccess = () => (newBookMagazineData.title && newBookMagazineData.isbn && newBookMagazineData.authors)\r\n\r\n  return (\r\n    <Dialog open={openState} onClose={onCloseCallback}>\r\n      <DialogTitle>Add new</DialogTitle>\r\n      <DialogContent>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              onChange={() => {\r\n                const type = additionType === BOOK ? MAGAZINE : BOOK\r\n                setAdditionType(type)\r\n                setNewBookMagazineData({ ...newBookMagazineData, publishedAt: '', description: '' })\r\n              }}\r\n              color='primary'\r\n            />}\r\n          label={additionType}\r\n        />\r\n        <br />\r\n        {addBookMagazineTextFields.map((item, index) => (\r\n          !item.switchable || (item.switchable && additionType === item.conditionalKey) ? <TextField\r\n            key={`add-book-magazine-text-field-${index}`}\r\n            onChange={(e) => {\r\n              setNewBookMagazineData({ ...newBookMagazineData, [item.key]: e.target.value })\r\n            }}\r\n            value={newBookMagazineData[item.key]}\r\n            placeholder={item.placeholder}\r\n            style={{ width: '500px', marginBottom: '16px' }}\r\n          /> : ''\r\n        ))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onCloseCallback}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            validationSuccess() && dispatch(addNewData(newBookMagazineData, additionType))\r\n          }}\r\n          color={'primary'}\r\n          variant={'contained'}\r\n          disabled={!validationSuccess()}\r\n        >\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddBookMagazineDialog\r\n"]},"metadata":{},"sourceType":"module"}