{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Andersen\\\\Test\\\\frontend_test_ik-master\\\\src\\\\components\\\\Library\\\\LibraryTable.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useStore } from 'react-redux';\nimport { tableCells } from \"./config\";\n\nconst LibraryTable = () => {\n  var _store$getState$libra2;\n\n  const store = useStore();\n  const {\n    0: libraryData,\n    1: setLibraryData\n  } = useState([]);\n  useEffect(() => {\n    var _store$getState$libra;\n\n    console.log('store', store.getState().library);\n    setLibraryData((_store$getState$libra = store.getState().library) === null || _store$getState$libra === void 0 ? void 0 : _store$getState$libra.fullData);\n  }, [(_store$getState$libra2 = store.getState().library) === null || _store$getState$libra2 === void 0 ? void 0 : _store$getState$libra2.fullData]);\n\n  const makeTableHeader = () => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'inline-block',\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"kj\"));\n\n  const makeRowCellForObjectValue = objectItem => objectItem.value ? objectItem.value : __jsx(React.Fragment, null, objectItem.map(i => __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 68\n    }\n  }, i.email)));\n\n  const makeTableRows = () => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, libraryData === null || libraryData === void 0 ? void 0 : libraryData.map((item, index) => {\n      return __jsx(\"div\", {\n        key: `library-table-row-${index}`,\n        style: {\n          width: '100%',\n          borderBottom: '1px solid',\n          display: 'flex',\n          alignItems: 'center',\n          padding: '8px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, tableCells.map((cell, cellIndex) => __jsx(\"div\", {\n        key: `library-table-row-cell-${cellIndex}`,\n        style: {\n          display: 'inline-block',\n          width: cell.widthDefault\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, typeof item[cell.title] !== 'object' ? item[cell.title] : makeRowCellForObjectValue(item[cell.title]))));\n    }));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Library\", makeTableHeader(), makeTableRows());\n};\n\nexport default LibraryTable;","map":{"version":3,"sources":["D:/Work/Andersen/Test/frontend_test_ik-master/src/components/Library/LibraryTable.js"],"names":["React","useEffect","useState","useStore","tableCells","LibraryTable","store","libraryData","setLibraryData","console","log","getState","library","fullData","makeTableHeader","display","width","makeRowCellForObjectValue","objectItem","value","map","i","email","makeTableRows","item","index","borderBottom","alignItems","padding","cell","cellIndex","widthDefault","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB,QAAMC,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAM;AAAA,OAACI,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAAK,CAACK,QAAN,GAAiBC,OAAtC;AACAJ,IAAAA,cAAc,0BAACF,KAAK,CAACK,QAAN,GAAiBC,OAAlB,0DAAC,sBAA0BC,QAA3B,CAAd;AACD,GAHQ,EAGN,2BAACP,KAAK,CAACK,QAAN,GAAiBC,OAAlB,2DAAC,uBAA0BC,QAA3B,CAHM,CAAT;;AAKA,QAAMC,eAAe,GAAG,MACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,cAAV;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;;AAOA,QAAMC,yBAAyB,GAAIC,UAAD,IAChCA,UAAU,CAACC,KAAX,GAAmBD,UAAU,CAACC,KAA9B,GAAuC,4BAAGD,UAAU,CAACE,GAAX,CAAeC,CAAC,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,CAAC,CAACC,KAAT,CAArB,CAAH,CADzC;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,WADH,aACGA,WADH,uBACGA,WAAW,CAAEa,GAAb,CAAiB,CAACI,IAAD,EAAOC,KAAP,KAAiB;AACjC,aACE;AAAK,QAAA,GAAG,EAAG,qBAAoBA,KAAM,EAArC;AAAwC,QAAA,KAAK,EAAE;AAACT,UAAAA,KAAK,EAAE,MAAR;AAAgBU,UAAAA,YAAY,EAAE,WAA9B;AAA2CX,UAAAA,OAAO,EAAE,MAApD;AAA4DY,UAAAA,UAAU,EAAE,QAAxE;AAAkFC,UAAAA,OAAO,EAAE;AAA3F,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGxB,UAAU,CAACgB,GAAX,CAAe,CAACS,IAAD,EAAOC,SAAP,KACd;AACE,QAAA,GAAG,EAAG,0BAAyBA,SAAU,EAD3C;AAEE,QAAA,KAAK,EAAE;AAACf,UAAAA,OAAO,EAAE,cAAV;AAA0BC,UAAAA,KAAK,EAAEa,IAAI,CAACE;AAAtC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,OAAOP,IAAI,CAACK,IAAI,CAACG,KAAN,CAAX,KAA4B,QAA5B,GAAuCR,IAAI,CAACK,IAAI,CAACG,KAAN,CAA3C,GAA0Df,yBAAyB,CAACO,IAAI,CAACK,IAAI,CAACG,KAAN,CAAL,CAJtF,CADD,CADH,CADF;AAgBD,KAjBA,CADH,CADF;AAqBD,GAtBD;;AAwBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEGlB,eAAe,EAFlB,EAGGS,aAAa,EAHhB,CADF;AAOD,CApDD;;AAsDA,eAAelB,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useStore } from 'react-redux';\r\nimport { tableCells } from './config';\r\n\r\n\r\nconst LibraryTable = () => {\r\n\r\n  const store = useStore();\r\n  const [libraryData, setLibraryData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log('store', store.getState().library);\r\n    setLibraryData(store.getState().library?.fullData);\r\n  }, [store.getState().library?.fullData]);\r\n\r\n  const makeTableHeader = () => (\r\n    <div>\r\n      <div style={{display: 'inline-block', width: '10%'}}>\r\n        kj\r\n      </div>\r\n    </div>);\r\n\r\n  const makeRowCellForObjectValue = (objectItem) => (\r\n    objectItem.value ? objectItem.value : (<>{objectItem.map(i => (<span>{i.email}</span>))}</>)\r\n  );\r\n\r\n  const makeTableRows = () => {\r\n    return (\r\n      <div>\r\n        {libraryData?.map((item, index) => {\r\n          return (\r\n            <div key={`library-table-row-${index}`} style={{width: '100%', borderBottom: '1px solid', display: 'flex', alignItems: 'center', padding: '8px 0'}}>\r\n              {tableCells.map((cell, cellIndex) => (\r\n                <div\r\n                  key={`library-table-row-cell-${cellIndex}`}\r\n                  style={{display: 'inline-block', width: cell.widthDefault}}\r\n                >\r\n                  {typeof item[cell.title] !== 'object' ? item[cell.title] : makeRowCellForObjectValue(item[cell.title])}\r\n                </div>\r\n              ))}\r\n              {/*<div style={{display: 'inline-block', width: '45%'}}>*/}\r\n              {/*  {item.additionalData.value}*/}\r\n              {/*</div>*/}\r\n              {/*{makeAuthorsCell(item.authors)}*/}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Library\r\n      {makeTableHeader()}\r\n      {makeTableRows()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LibraryTable;"]},"metadata":{},"sourceType":"module"}