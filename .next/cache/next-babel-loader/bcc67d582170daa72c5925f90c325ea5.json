{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Andersen\\\\Test\\\\frontend_test_ik-master\\\\src\\\\components\\\\Library\\\\AddBookMagazineDialog.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText, Switch, FormControlLabel, Button, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { BOOK, MAGAZINE } from \"./config\";\n\nconst AddBookMagazineDialog = ({\n  openState = false,\n  onCloseCallback\n}) => {\n  const {\n    0: additionType,\n    1: setAdditionType\n  } = useState(BOOK);\n  const {\n    0: newBookMagazineData,\n    1: setNewBookMagazineData\n  } = useState({\n    title: '',\n    isbn: '',\n    authors: '',\n    publishedAt: '',\n    description: ''\n  });\n  return __jsx(Dialog, {\n    open: openState,\n    onClose: onCloseCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Add new\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      onChange: () => {\n        const type = additionType === BOOK ? MAGAZINE : BOOK;\n        setAdditionType(type);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }),\n    label: additionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(TextField, {\n    onChange: e => {\n      setNewBookMagazineData(_objectSpread(_objectSpread({}, newBookMagazineData), {}, {\n        title: e.target.value\n      }));\n    },\n    value: newBookMagazineData.title,\n    placeholder: 'Title',\n    style: {\n      margin: '8px',\n      width: '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(TextField, {\n    onChange: e => {\n      setNewBookMagazineData(_objectSpread(_objectSpread({}, newBookMagazineData), {}, {\n        isbn: e.target.value\n      }));\n    },\n    value: newBookMagazineData.isbn,\n    placeholder: 'ISBN',\n    style: {\n      margin: '8px',\n      width: '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: onCloseCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: () => {\n      console.log('newBookMagazineData', newBookMagazineData);\n    },\n    color: 'primary',\n    variant: 'contained',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\n\nexport default AddBookMagazineDialog;","map":{"version":3,"sources":["D:/Work/Andersen/Test/frontend_test_ik-master/src/components/Library/AddBookMagazineDialog.js"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","DialogContentText","Switch","FormControlLabel","Button","TextField","useDispatch","BOOK","MAGAZINE","AddBookMagazineDialog","openState","onCloseCallback","additionType","setAdditionType","newBookMagazineData","setNewBookMagazineData","title","isbn","authors","publishedAt","description","type","e","target","value","margin","width","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Switch,\r\n  FormControlLabel,\r\n  Button, TextField\r\n} from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { BOOK, MAGAZINE } from './config'\r\n\r\nconst AddBookMagazineDialog = ({ openState = false, onCloseCallback }) => {\r\n\r\n  const [additionType, setAdditionType] = useState(BOOK)\r\n  const [newBookMagazineData, setNewBookMagazineData] = useState({\r\n    title: '',\r\n    isbn: '',\r\n    authors: '',\r\n    publishedAt: '',\r\n    description: ''\r\n  })\r\n\r\n  return (\r\n    <Dialog open={openState} onClose={onCloseCallback}>\r\n      <DialogTitle>Add new</DialogTitle>\r\n      <DialogContent>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              onChange={() => {\r\n                const type = additionType === BOOK ? MAGAZINE : BOOK\r\n                setAdditionType(type)\r\n              }}\r\n              color='primary'\r\n            />}\r\n          label={additionType}\r\n        />\r\n        <br />\r\n        <TextField\r\n          onChange={(e) => {\r\n            setNewBookMagazineData({ ...newBookMagazineData, title: e.target.value });\r\n          }}\r\n          value={newBookMagazineData.title}\r\n          placeholder={'Title'}\r\n          style={{ margin: '8px', width: '400px' }}\r\n        />\r\n        <TextField\r\n          onChange={(e) => {\r\n            setNewBookMagazineData({ ...newBookMagazineData, isbn: e.target.value });\r\n          }}\r\n          value={newBookMagazineData.isbn}\r\n          placeholder={'ISBN'}\r\n          style={{ margin: '8px', width: '400px' }}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onCloseCallback}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => { console.log('newBookMagazineData', newBookMagazineData) }}\r\n          color={'primary'}\r\n          variant={'contained'}\r\n        >\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddBookMagazineDialog\r\n"]},"metadata":{},"sourceType":"module"}