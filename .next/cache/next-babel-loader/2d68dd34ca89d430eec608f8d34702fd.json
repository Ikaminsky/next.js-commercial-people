{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Work\\\\Andersen\\\\Test\\\\frontend_test_ik-master\\\\src\\\\components\\\\Library\\\\ExportDataDialog.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Switch, FormControlLabel } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { useSelector } from 'react-redux';\nimport { CSVLink } from 'react-csv';\n\nvar ExportDataDialog = function ExportDataDialog(_ref) {\n  _s();\n\n  var _ref$openState = _ref.openState,\n      openState = _ref$openState === void 0 ? false : _ref$openState,\n      onCloseCallback = _ref.onCloseCallback;\n  var BOOKS = 'BOOKS';\n  var MAGAZINES = 'MAGAZINES';\n  var libraryData = useSelector(function (state) {\n    return state.library;\n  });\n  console.log('libraryFullData', libraryData);\n\n  var _useState = useState(BOOKS),\n      exportDataType = _useState[0],\n      setExportDataType = _useState[1];\n\n  var getDataForExport = function getDataForExport() {\n    return exportDataType === BOOKS ? libraryData.books : libraryData.magazines;\n  };\n\n  return __jsx(Dialog, {\n    open: openState,\n    onClose: onCloseCallback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Export\"), __jsx(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      onChange: function onChange() {\n        var type = exportDataType === BOOKS ? MAGAZINES : BOOKS;\n        setExportDataType(type);\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }),\n    label: exportDataType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }))), __jsx(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: onCloseCallback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(CSVLink, {\n    data: getDataForExport() || [],\n    filename: \"new\".concat(exportDataType, \".csv\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {},\n    color: 'primary',\n    variant: 'contained',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"DOWNLOAD\"))));\n};\n\n_s(ExportDataDialog, \"evRnDEd90YG9rjAFinNw5T1c6f8=\", false, function () {\n  return [useSelector];\n});\n\n_c = ExportDataDialog;\nexport default ExportDataDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExportDataDialog\");","map":{"version":3,"sources":["D:/Work/Andersen/Test/frontend_test_ik-master/src/components/Library/ExportDataDialog.js"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Switch","FormControlLabel","Button","useSelector","CSVLink","ExportDataDialog","openState","onCloseCallback","BOOKS","MAGAZINES","libraryData","state","library","console","log","exportDataType","setExportDataType","getDataForExport","books","magazines","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B,EAA6CC,aAA7C,EAA4DC,MAA5D,EAAoEC,gBAApE,QAA4F,mBAA5F;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA4C;AAAA;;AAAA,4BAAzCC,SAAyC;AAAA,MAAzCA,SAAyC,+BAA7B,KAA6B;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AAEnE,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,MAAMC,WAAW,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAKA,KAAK,CAACC,OAAX;AAAA,GAAN,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,WAA/B;;AANmE,kBAOvBf,QAAQ,CAACa,KAAD,CAPe;AAAA,MAO5DO,cAP4D;AAAA,MAO5CC,iBAP4C;;AASnE,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WACvBF,cAAc,KAAKP,KAAnB,GAA2BE,WAAW,CAACQ,KAAvC,GAA+CR,WAAW,CAACS,SADpC;AAAA,GAAzB;;AAIA,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEb,SAAd;AAAyB,IAAA,OAAO,EAAEC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,OAAO,EACL,MAAC,MAAD;AACE,MAAA,QAAQ,EAAE,oBAAM;AACd,YAAMa,IAAI,GAAGL,cAAc,KAAKP,KAAnB,GAA2BC,SAA3B,GAAuCD,KAApD;AACAQ,QAAAA,iBAAiB,CAACI,IAAD,CAAjB;AACD,OAJH;AAKE,MAAA,KAAK,EAAC,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AASE,IAAA,KAAK,EAAEL,cATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,EAiBE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAER,eADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAME,MAAC,OAAD;AACE,IAAA,IAAI,EAAEU,gBAAgB,MAAM,EAD9B;AAEE,IAAA,QAAQ,eAAQF,cAAR,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM,CAAE,CADnB;AAEE,IAAA,KAAK,EAAE,SAFT;AAGE,IAAA,OAAO,EAAE,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CANF,CAjBF,CADF;AAuCD,CApDD;;GAAMV,gB;UAKgBF,W;;;KALhBE,gB;AAsDN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Switch, FormControlLabel } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useSelector } from 'react-redux'\r\nimport { CSVLink } from 'react-csv'\r\n\r\nconst ExportDataDialog = ({ openState = false, onCloseCallback }) => {\r\n\r\n  const BOOKS = 'BOOKS'\r\n  const MAGAZINES = 'MAGAZINES'\r\n\r\n  const libraryData = useSelector(state => (state.library))\r\n  console.log('libraryFullData', libraryData)\r\n  const [exportDataType, setExportDataType] = useState(BOOKS)\r\n\r\n  const getDataForExport = () => (\r\n    exportDataType === BOOKS ? libraryData.books : libraryData.magazines\r\n  )\r\n\r\n  return (\r\n    <Dialog open={openState} onClose={onCloseCallback}>\r\n      <DialogTitle>Export</DialogTitle>\r\n      <DialogContent>\r\n        <div>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                onChange={() => {\r\n                  const type = exportDataType === BOOKS ? MAGAZINES : BOOKS\r\n                  setExportDataType(type)\r\n                }}\r\n                color='primary'\r\n              />}\r\n            label={exportDataType}\r\n          />\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onCloseCallback}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <CSVLink\r\n          data={getDataForExport() || []}\r\n          filename={`new${exportDataType}.csv`}\r\n        >\r\n          <Button\r\n            onClick={() => {}}\r\n            color={'primary'}\r\n            variant={'contained'}\r\n          >\r\n            DOWNLOAD\r\n          </Button>\r\n        </CSVLink>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default ExportDataDialog\r\n"]},"metadata":{},"sourceType":"module"}