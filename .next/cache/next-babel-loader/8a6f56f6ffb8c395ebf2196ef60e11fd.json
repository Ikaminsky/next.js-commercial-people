{"ast":null,"code":"var _jsxFileName = \"/Users/ilyakaminsky/Downloads/frontend_test_ikaminskii-master/src/components/Library/AddBookMagazineDialog.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Switch, FormControlLabel, Button, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { BOOK, MAGAZINE, addBookMagazineTextFields } from \"./config\";\nimport { MODAL_STYLES } from \"../../utils/consts\";\nimport { addNewData } from \"../../actions/library\";\n\nconst AddBookMagazineDialog = ({\n  openState = false,\n  onCloseCallback\n}) => {\n  const {\n    0: additionType,\n    1: setAdditionType\n  } = useState(BOOK);\n  const {\n    0: newBookMagazineData,\n    1: setNewBookMagazineData\n  } = useState({\n    title: '',\n    isbn: '',\n    authors: '',\n    publishedAt: '',\n    description: ''\n  });\n  const dispatch = useDispatch();\n\n  const validationSuccess = () => newBookMagazineData.title && newBookMagazineData.isbn && newBookMagazineData.authors && (newBookMagazineData.publishedAt || newBookMagazineData.description);\n\n  return __jsx(Dialog, {\n    open: openState,\n    onClose: onCloseCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Add new\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      onChange: () => {\n        const type = additionType === BOOK ? MAGAZINE : BOOK;\n        setAdditionType(type);\n        setNewBookMagazineData(_objectSpread(_objectSpread({}, newBookMagazineData), {}, {\n          publishedAt: '',\n          description: ''\n        }));\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }),\n    label: additionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), addBookMagazineTextFields.map((item, index) => !item.switchable || item.switchable && additionType === item.conditionalKey ? __jsx(TextField, {\n    key: `add-book-magazine-text-field-${index}`,\n    onChange: e => {\n      setNewBookMagazineData(_objectSpread(_objectSpread({}, newBookMagazineData), {}, {\n        [item.key]: e.target.value\n      }));\n    },\n    value: newBookMagazineData[item.key],\n    placeholder: item.placeholder,\n    style: MODAL_STYLES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 91\n    }\n  }) : '')), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: onCloseCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: () => {\n      if (!validationSuccess()) {\n        return;\n      }\n\n      dispatch(addNewData(newBookMagazineData, additionType));\n      onCloseCallback();\n    },\n    color: 'primary',\n    variant: 'contained',\n    disabled: !validationSuccess(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\n\nexport default AddBookMagazineDialog;","map":{"version":3,"sources":["/Users/ilyakaminsky/Downloads/frontend_test_ikaminskii-master/src/components/Library/AddBookMagazineDialog.js"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Switch","FormControlLabel","Button","TextField","useDispatch","BOOK","MAGAZINE","addBookMagazineTextFields","MODAL_STYLES","addNewData","AddBookMagazineDialog","openState","onCloseCallback","additionType","setAdditionType","newBookMagazineData","setNewBookMagazineData","title","isbn","authors","publishedAt","description","dispatch","validationSuccess","type","map","item","index","switchable","conditionalKey","e","key","target","value","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Switch,\r\n  FormControlLabel,\r\n  Button, TextField\r\n} from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { BOOK, MAGAZINE, addBookMagazineTextFields } from './config'\r\nimport { MODAL_STYLES } from '../../utils/consts'\r\nimport { addNewData } from '../../actions/library'\r\n\r\nconst AddBookMagazineDialog = ({ openState = false, onCloseCallback }) => {\r\n  const [additionType, setAdditionType] = useState(BOOK)\r\n  const [newBookMagazineData, setNewBookMagazineData] = useState({\r\n    title: '',\r\n    isbn: '',\r\n    authors: '',\r\n    publishedAt: '',\r\n    description: ''\r\n  })\r\n  const dispatch = useDispatch()\r\n\r\n  const validationSuccess = () => (\r\n    newBookMagazineData.title && newBookMagazineData.isbn && newBookMagazineData.authors &&\r\n    (newBookMagazineData.publishedAt || newBookMagazineData.description))\r\n\r\n  return (\r\n    <Dialog open={openState} onClose={onCloseCallback}>\r\n      <DialogTitle>Add new</DialogTitle>\r\n      <DialogContent>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              onChange={() => {\r\n                const type = additionType === BOOK ? MAGAZINE : BOOK\r\n                setAdditionType(type)\r\n                setNewBookMagazineData({ ...newBookMagazineData, publishedAt: '', description: '' })\r\n              }}\r\n              color='primary'\r\n            />}\r\n          label={additionType}\r\n        />\r\n        <br />\r\n        {addBookMagazineTextFields.map((item, index) => (\r\n          !item.switchable || (item.switchable && additionType === item.conditionalKey) ? <TextField\r\n            key={`add-book-magazine-text-field-${index}`}\r\n            onChange={(e) => {\r\n              setNewBookMagazineData({ ...newBookMagazineData, [item.key]: e.target.value })\r\n            }}\r\n            value={newBookMagazineData[item.key]}\r\n            placeholder={item.placeholder}\r\n            style={MODAL_STYLES}\r\n          /> : ''\r\n        ))}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={onCloseCallback}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            if (!validationSuccess()) {\r\n              return\r\n            }\r\n            dispatch(addNewData(newBookMagazineData, additionType))\r\n            onCloseCallback()\r\n          }}\r\n          color={'primary'}\r\n          variant={'contained'}\r\n          disabled={!validationSuccess()}\r\n        >\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddBookMagazineDialog\r\n"]},"metadata":{},"sourceType":"module"}