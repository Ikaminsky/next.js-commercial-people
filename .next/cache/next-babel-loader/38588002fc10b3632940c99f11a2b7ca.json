{"ast":null,"code":"var _jsxFileName = \"/Users/ilyakaminsky/Downloads/frontend_test_ikaminskii-master/src/containers/SearchRepoContainer.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map } from 'immutable';\nimport { connect } from 'react-redux';\nimport { getTopRepos } from \"../actions/repos\";\nimport SearchResults from \"../components/SearchResults\";\n\nclass SearchRepoContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_goToAbout\", () => {\n      this.props.router.push('/about');\n    });\n  }\n\n  static async getInitialProps({\n    store,\n    query\n  }) {\n    // You can add default property 'javascript' in quotes\n    const lang = query.lang || '';\n    await store.dispatch(getTopRepos({\n      lang\n    }));\n    return {\n      lang\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getTopRepos\n    } = this.props;\n    getTopRepos({\n      lang: 'ruby'\n    });\n  }\n\n  render() {\n    const {\n      repos\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      onClick: this._goToAbout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"GO TO ABOUT (with \", __jsx(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, \"router\"), \")\"), __jsx(SearchResults, {\n      repos: repos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    repos: state.repos\n  };\n}\n\nSearchRepoContainer.propTypes = {\n  repos: PropTypes.instanceOf(Map).isRequired,\n  getTopRepos: PropTypes.func.isRequired\n};\nexport { SearchRepoContainer };\nexport default connect(mapStateToProps, {\n  getTopRepos\n})(SearchRepoContainer);","map":{"version":3,"sources":["/Users/ilyakaminsky/Downloads/frontend_test_ikaminskii-master/src/containers/SearchRepoContainer.js"],"names":["React","Component","Fragment","PropTypes","Map","connect","getTopRepos","SearchResults","SearchRepoContainer","props","router","push","getInitialProps","store","query","lang","dispatch","componentDidMount","render","repos","_goToAbout","mapStateToProps","state","propTypes","instanceOf","isRequired","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT;AACA,OAAOC,aAAP;;AAEA,MAAMC,mBAAN,SAAkCP,SAAlC,CAA4C;AAAA;AAAA;;AAAA,wCAyB7B,MAAM;AACjB,WAAKQ,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB,QAAvB;AACD,KA3ByC;AAAA;;AAC1C,eAAaC,eAAb,CAA8B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA9B,EAAgD;AAC9C;AACA,UAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,IAAc,EAA3B;AACA,UAAMF,KAAK,CAACG,QAAN,CAAeV,WAAW,CAAC;AAAES,MAAAA;AAAF,KAAD,CAA1B,CAAN;AACA,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AAEDE,EAAAA,iBAAiB,GAAI;AACnB,UAAM;AAAEX,MAAAA;AAAF,QAAkB,KAAKG,KAA7B;AACAH,IAAAA,WAAW,CAAC;AAAES,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAX;AACD;;AAEDG,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AACA,WACE,4BACE;AAAK,MAAA,OAAO,EAAE,KAAKW,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB,MADF,EAIE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAED,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAvByC;;AA8B5C,SAASE,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLH,IAAAA,KAAK,EAAEG,KAAK,CAACH;AADR,GAAP;AAGD;;AAEDX,mBAAmB,CAACe,SAApB,GAAgC;AAC9BJ,EAAAA,KAAK,EAAEhB,SAAS,CAACqB,UAAV,CAAqBpB,GAArB,EAA0BqB,UADH;AAE9BnB,EAAAA,WAAW,EAAEH,SAAS,CAACuB,IAAV,CAAeD;AAFE,CAAhC;AAKA,SAASjB,mBAAT;AACA,eAAeH,OAAO,CAACgB,eAAD,EAAkB;AACtCf,EAAAA;AADsC,CAAlB,CAAP,CAEZE,mBAFY,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Map } from 'immutable'\nimport { connect } from 'react-redux'\n\nimport { getTopRepos } from 'actions/repos'\nimport SearchResults from 'components/SearchResults'\n\nclass SearchRepoContainer extends Component {\n  static async getInitialProps ({ store, query }) {\n    // You can add default property 'javascript' in quotes\n    const lang = query.lang || ''\n    await store.dispatch(getTopRepos({ lang }))\n    return { lang }\n  }\n\n  componentDidMount () {\n    const { getTopRepos } = this.props\n    getTopRepos({ lang: 'ruby' })\n  }\n\n  render () {\n    const { repos } = this.props\n    return (\n      <>\n        <div onClick={this._goToAbout}>\n          GO TO ABOUT (with <code>router</code>)\n        </div>\n        <SearchResults repos={repos} />\n      </>\n    )\n  }\n\n  _goToAbout = () => {\n    this.props.router.push('/about')\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    repos: state.repos\n  }\n}\n\nSearchRepoContainer.propTypes = {\n  repos: PropTypes.instanceOf(Map).isRequired,\n  getTopRepos: PropTypes.func.isRequired\n}\n\nexport { SearchRepoContainer }\nexport default connect(mapStateToProps, {\n  getTopRepos\n})(SearchRepoContainer)\n"]},"metadata":{},"sourceType":"module"}