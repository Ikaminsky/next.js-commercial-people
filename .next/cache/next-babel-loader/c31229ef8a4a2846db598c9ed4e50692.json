{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var SET_LIBRARY_DATA = 'SET_LIBRARY_DATA';\nexport function setLibraryData(data) {\n  var payload = [].concat(data.books, data.magazines).map(function (item) {\n    var authors = item.authors.split(',').map(function (authorMail) {\n      var currentAuthorData = {};\n\n      for (var i = 0; i < data.authors.length; i++) {\n        if (data.authors[i].email === authorMail) {\n          currentAuthorData = data.authors[i];\n          break;\n        }\n      }\n\n      return currentAuthorData;\n    });\n    return _objectSpread(_objectSpread({}, item), {}, {\n      authors: authors\n    });\n  });\n  return {\n    type: SET_LIBRARY_DATA,\n    payload: payload\n  };\n}","map":{"version":3,"sources":["D:/Work/Andersen/Test/frontend_test_ik-master/src/actions/library.js"],"names":["SET_LIBRARY_DATA","setLibraryData","data","payload","concat","books","magazines","map","item","authors","split","authorMail","currentAuthorData","i","length","email","type"],"mappings":";;;;;;AAAA,OAAO,IAAMA,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,SAASC,cAAT,CAAyBC,IAAzB,EAA+B;AACpC,MAAIC,OAAO,GAAG,GAAGC,MAAH,CAAUF,IAAI,CAACG,KAAf,EAAsBH,IAAI,CAACI,SAA3B,EAAsCC,GAAtC,CAA0C,UAACC,IAAD,EAAU;AAChE,QAAIC,OAAO,GAAGD,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAmB,GAAnB,EAAwBH,GAAxB,CAA4B,UAACI,UAAD,EAAgB;AACxD,UAAIC,iBAAiB,GAAG,EAAxB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAACO,OAAL,CAAaK,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAIX,IAAI,CAACO,OAAL,CAAaI,CAAb,EAAgBE,KAAhB,KAA0BJ,UAA9B,EAA0C;AACxCC,UAAAA,iBAAiB,GAAGV,IAAI,CAACO,OAAL,CAAaI,CAAb,CAApB;AACA;AACD;AACF;;AACD,aAAOD,iBAAP;AACD,KATa,CAAd;AAUA,2CACKJ,IADL;AACWC,MAAAA,OAAO,EAAPA;AADX;AAGD,GAda,CAAd;AAeA,SAAO;AACLO,IAAAA,IAAI,EAAEhB,gBADD;AAELG,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID","sourcesContent":["export const SET_LIBRARY_DATA = 'SET_LIBRARY_DATA';\r\n\r\nexport function setLibraryData (data) {\r\n  let payload = [].concat(data.books, data.magazines).map((item) => {\r\n    let authors = item.authors.split(',').map((authorMail) => {\r\n      let currentAuthorData = {};\r\n      for (let i = 0; i < data.authors.length; i++) {\r\n        if (data.authors[i].email === authorMail) {\r\n          currentAuthorData = data.authors[i];\r\n          break;\r\n        }\r\n      }\r\n      return currentAuthorData;\r\n    })\r\n    return {\r\n      ...item, authors\r\n    }\r\n  });\r\n  return {\r\n    type: SET_LIBRARY_DATA,\r\n    payload\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}